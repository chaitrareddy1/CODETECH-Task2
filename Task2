import pandas as pd
from sklearn.datasets import fetch_openml
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from imblearn.over_sampling import SMOTE
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

data = fetch_openml(name='creditcard', version=1, as_frame=True)
df = data.frame

df_small = df.sample(frac=0.1, random_state=42)

print(df_small.isnull().sum())

scaler = StandardScaler()
df_small[['Amount']] = scaler.fit_transform(df_small[['Amount']])

X_small = df_small.drop('Class', axis=1)
y_small = df_small['Class'].astype(int)  # Ensure labels are integers

X_train_small, X_test_small, y_train_small, y_test_small = train_test_split(X_small, y_small, test_size=0.2, random_state=42)

 
sm = SMOTE(random_state=42)
X_train_res_small, y_train_res_small = sm.fit_resample(X_train_small, y_train_small)

print(y_train_res_small.value_counts())

rf_model_small = RandomForestClassifier(n_estimators=50, max_depth=10, random_state=42)

rf_model_small.fit(X_train_res_small, y_train_res_small)

y_pred_small = rf_model_small.predict(X_test_small).astype(int)  # Ensure predictions are integers

accuracy = accuracy_score(y_test_small, y_pred_small)
precision = precision_score(y_test_small, y_pred_small, pos_label=1)
recall = recall_score(y_test_small, y_pred_small, pos_label=1)
f1 = f1_score(y_test_small, y_pred_small, pos_label=1)
cm = confusion_matrix(y_test_small, y_pred_small)

print(f'Accuracy: {accuracy:.2f}')
print(f'Precision: {precision:.2f}')
print(f'Recall: {recall:.2f}')
print(f'F1 Score: {f1:.2f}')
print('Confusion Matrix:')
print(cm)

sns.countplot(x='Class', data=df_small)
plt.title('Class Distribution')
plt.show()
